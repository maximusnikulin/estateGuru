/********* MEDIA **********/
@mixin custom($width) {
  @media (max-width: #{$width}) {
    @content;
  }
}
@mixin mobile {
  @media (max-width: #{$mobile}) {
    @content;
  }
}
@mixin tablet-vl {
  @media (max-width: #{$tablet-vl}) {
    @content;
  }
}
@mixin tablet-hl {
  @media (max-width: #{$tablet-hl}) {
    @content;
  }
}
@mixin desktop {
  @media (max-width: #{$desktop}) {
    @content;
  }
}
@mixin btw($width-bottom, $width-top) {
  @media (min-width: #{$width-bottom + 1px}) and (max-width: #{$width-top }) {
    @content;
  }
} 
@mixin onHover {
  @media (min-width: #{$tablet-hl + 1px}){
    @content;
  }
} 
/********* INLINE-SVG **********/

@mixin svg($icon) {
  background: inline($icon) no-repeat;
  width: width($icon);
  height: height($icon);
}

/********* FIGURES **********/

@mixin distribute-on-circle( 
  $nb-items,
  $circle-size,
  $item-size,
  $class-for-IE: false
) {
  $half-item: ($item-size / 2);
  $half-parent: ($circle-size / 2);
  
  position: relative; /* 1 */
  width:  $circle-size;
  height: $circle-size;
  padding: 0;
  border-radius: 50%; 
  list-style: none; /* 2 */ 
  box-sizing: content-box; /* 3 */ 
  
  > * { /* 4 */
    display: block;
    position: absolute;
    top:  50%; 
    left: 50%;
    width:  $item-size;
    height: $item-size;
    margin: -$half-item;
  }
  
  $angle: (360 / $nb-items);
  $rot: 0;

  @for $i from 1 through $nb-items {
    @if not $class-for-IE {
      > :nth-of-type(#{$i}) {
        transform: rotate($rot * 1deg) translate($half-parent) rotate($rot * -1deg);
      }
    } @else {
      > .#{$class-for-IE}#{$i} {
        // If CSS transforms are not supported
        $mt: sin($rot * pi() / 180) * $half-parent - $half-item;
        $ml: cos($rot * pi() / 180) * $half-parent - $half-item;
        margin: $mt 0 0 $ml;
      }
    }

    $rot: ($rot + $angle);
  }
}